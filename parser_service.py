import schedule
import time
from database import db_manager
from parser import parse_table_for_service

print("üîß –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–µ—Ä–≤–∏—Å–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞...")

# –ó–∞–≥—Ä—É–∂–∞–µ–º –≥–∏–ª—å–¥–∏–∏ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ
def load_guilds_for_service():
    """–ó–∞–≥—Ä—É–∂–∞–µ—Ç –≥–∏–ª—å–¥–∏–∏ –∏–∑ –ë–î –¥–ª—è —Å–µ—Ä–≤–∏—Å–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞"""
    print("üì• –ó–∞–≥—Ä—É–∂–∞–µ–º –≥–∏–ª—å–¥–∏–∏ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...")

    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Ç–∞–±–ª–∏—Ü—ã –ë–î
    db_manager.setup_database()
    db_manager.setup_guilds_table()

    guilds = db_manager.load_all_guilds()
    print(f"üìä –ó–∞–≥—Ä—É–∂–µ–Ω–æ {len(guilds)} –≥–∏–ª—å–¥–∏–π –¥–ª—è –ø–∞—Ä—Å–∏–Ω–≥–∞")

    if guilds:
        for i, (name, url) in enumerate(guilds.items(), 1):
            print(f"  {i}. {name}")
    else:
        print("‚ùå –í –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö –Ω–µ—Ç –≥–∏–ª—å–¥–∏–π –¥–ª—è –ø–∞—Ä—Å–∏–Ω–≥–∞")
        print("üí° –î–æ–±–∞–≤—å—Ç–µ –≥–∏–ª—å–¥–∏–∏ —á–µ—Ä–µ–∑ –±–æ—Ç–∞ –∫–æ–º–∞–Ω–¥–æ–π /start")

    return guilds

def scheduled_parsing():
    print(f"\nüîÑ –ù–∞—á–∞–ª–æ –ø–ª–∞–Ω–æ–≤–æ–≥–æ –ø–∞—Ä—Å–∏–Ω–≥–∞ –≤ {time.strftime('%H:%M:%S')}")

    if not GUILD_URLS:
        print("‚ùå –ù–µ—Ç –≥–∏–ª—å–¥–∏–π –¥–ª—è –ø–∞—Ä—Å–∏–Ω–≥–∞. –î–æ–±–∞–≤—å—Ç–µ –≥–∏–ª—å–¥–∏–∏ —á–µ—Ä–µ–∑ –±–æ—Ç–∞.")
        return

    print(f"üìä –ù–∞—á–∏–Ω–∞–µ–º –ø–∞—Ä—Å–∏–Ω–≥ {len(GUILD_URLS)} –≥–∏–ª—å–¥–∏–π...")

    for guild_name, url in GUILD_URLS.items():
        try:
            print(f"üéØ –ü–∞—Ä—Å–∏–º –≥–∏–ª—å–¥–∏—é: {guild_name}")
            print(f"üîó URL: {url}")

            # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≥–∏–ª—å–¥–∏—é –ø–µ—Ä–µ–¥ –ø–∞—Ä—Å–∏–Ω–≥–æ–º (–Ω–∞ –≤—Å—è–∫–∏–π —Å–ª—É—á–∞–π)
            db_manager.save_guild(guild_name, url)

            # –ó–∞–ø—É—Å–∫–∞–µ–º –ø–∞—Ä—Å–∏–Ω–≥
            df = parse_table_for_service(url)

            if not df.empty:
                success = db_manager.save_donations(df, guild_name)
                if success:
                    print(f"‚úÖ {guild_name}: —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ {len(df)} –∑–∞–ø–∏—Å–µ–π")
                else:
                    print(f"‚ùå {guild_name}: –æ—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –≤ –ë–î")
            else:
                print(f"‚ö†Ô∏è {guild_name}: –Ω–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ (–ø—É—Å—Ç–æ–π DataFrame)")

        except Exception as e:
            print(f"üö® –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –≤ –≥–∏–ª—å–¥–∏–∏ {guild_name}: {e}")
            import traceback
            traceback.print_exc()

    print(f"‚úÖ –ü–ª–∞–Ω–æ–≤—ã–π –ø–∞—Ä—Å–∏–Ω–≥ –∑–∞–≤–µ—Ä—à–µ–Ω –≤ {time.strftime('%H:%M:%S')}")

# –ó–∞–≥—Ä—É–∂–∞–µ–º –≥–∏–ª—å–¥–∏–∏ —Ç–æ–ª—å–∫–æ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ —Å–∫—Ä–∏–ø—Ç–∞ –Ω–∞–ø—Ä—è–º—É—é
if __name__ == '__main__':
    GUILD_URLS = load_guilds_for_service()

    # –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ
    print("‚è∞ –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ...")
    schedule.every(2).minutes.do(scheduled_parsing)

    print(f"\nüöÄ –°–µ—Ä–≤–∏—Å –ø–∞—Ä—Å–∏–Ω–≥–∞ –∑–∞–ø—É—â–µ–Ω!")
    print(f"üìä –ú–æ–Ω–∏—Ç–æ—Ä–∏–º {len(GUILD_URLS)} –≥–∏–ª—å–¥–∏–π")
    print(f"‚è∞ –ü–∞—Ä—Å–∏–Ω–≥ –∫–∞–∂–¥—ã–µ 2 –º–∏–Ω—É—Ç—ã")
    print(f"‚è≥ –û–∂–∏–¥–∞–µ–º –ø–µ—Ä–≤–æ–≥–æ –∑–∞–ø—É—Å–∫–∞...")

    # –ë–µ—Å–∫–æ–Ω–µ—á–Ω—ã–π —Ü–∏–∫–ª
    try:
        while True:
            schedule.run_pending()
            time.sleep(60)
    except KeyboardInterrupt:
        print("\n‚èπÔ∏è –°–µ—Ä–≤–∏—Å –ø–∞—Ä—Å–∏–Ω–≥–∞ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")